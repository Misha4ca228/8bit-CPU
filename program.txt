LDI 0, 78;  # Счетчик количества
LDI 1, 0;   # Текущий символ

LDI 2, 5;   # Пробел
ST 2, 241;  # Сохраняем пробел в память

LDI 4, 100; # Регистр для деления на 100
LDI 5, 10;  # Регистр для деления на 10

loop:
    LDI 7, 100;
    LDI 7, 100;
    LDI 7, 100;
    LDI 7, 100;
    LDI 7, 100;


    ST 1, 240;   # Выводим текущий символ

    # Вычисляем 1 символ (сотни)
    MOV 3, 1;    # Копируем текущий символ в R3
    DIV 3, 4;    # Делим R3 на 100

    ADDI 3, 55;
    ST 3, 242;   # Сохраняем в память символ сотен

    # Вычисляем 2 символ (десятки)
    MOV 3, 1;    # Копируем снова текущий символ
    MOD 3, 4;    # Остаток от деления на 100
    DIV 3, 5;    # Делим на 10

    ADDI 3, 55;
    ST 3, 243;   # Сохраняем в память символ десятков

    # Вычисляем 3 символ (единицы)
    MOV 3, 1;    # Копируем символ
    MOD 3, 5;    # Остаток от деления на 10
    ADDI 3, 55;
    ST 3, 244;   # Сохраняем в память символ единиц


    DEC 0;       # Уменьшаем счётчик
    INC 1;       # Увеличиваем текущий символ
    JNZ 0, loop; # Если R0 != 0, продолжаем цикл
    JMP halt;    # Иначе переходим к завершению

halt:
    ST 1, 240;   # Выводим финальный символ
    HALT;        # Останавливаем программу
